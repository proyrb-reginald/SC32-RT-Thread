<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [./build/Main/project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ./build/Main/project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6230001: Last Updated: Fri Aug  1 16:15:37 2025
<BR><P>
<H3>Maximum Stack Usage =         40 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[21]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21]">ADC_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[f]">BTM_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[20]">CAN_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[22]">CMP_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[14]">DMA0_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[15]">DMA1_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[16]">DMA2_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[17]">DMA3_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[a]">INT0_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[d]">INT12_15_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[b]">INT1_7_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[c]">INT8_11_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[1f]">LEDPWM_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[1e]">PWM0_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[25]">SystemInit</a> from system_sc32f1xxx.o(.text.SystemInit) referenced from startup_sc32r803.o(.text)
 <LI><a href="#[18]">TIMER0_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[19]">TIMER1_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[1a]">TIMER2_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[1b]">TIMER3_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[1c]">TIMER4_5_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[1d]">TIMER6_7_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[23]">TK_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[12]">TWIx_QSPIx_0_2_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[13]">TWIx_QSPIx_1_3_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[10]">UART0_2_4_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[11]">UART1_3_5_IRQHandler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_sc32r803.o(.text) referenced from startup_sc32r803.o(RESET)
 <LI><a href="#[26]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_sc32r803.o(.text)
 <LI><a href="#[27]">fputc</a> from sc32f1xxx_uart.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[24]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[26]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[28]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[37]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[44]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[45]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[46]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[47]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[48]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>BTM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>INT12_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>INT1_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>INT8_11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LEDPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TWIx_QSPIx_0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TWIx_QSPIx_1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART0_2_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART1_3_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sc32r803.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[4a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[4b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4c]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[2d]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_sc32f1xxx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32r803.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>UART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sc32f1xxx_uart.o(.text.UART_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[39]"></a>UART_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, sc32f1xxx_uart.o(.text.UART_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[38]"></a>UART_SendData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sc32f1xxx_uart.o(.text.UART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[27]"></a>fputc</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sc32f1xxx_uart.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fputc &rArr; UART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearFlag
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[24]"></a>main</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = main &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[3c]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4f]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[50]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[51]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[3b]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[52]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[53]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[54]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3e]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3d]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[41]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[40]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
