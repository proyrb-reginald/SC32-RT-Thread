Component: Arm Compiler for Embedded 6.23 Tool: armlink [5f102400]

==============================================================================

Section Cross References

    startup_sc32r803.o(RESET) refers to startup_sc32r803.o(STACK) for __initial_sp
    startup_sc32r803.o(RESET) refers to startup_sc32r803.o(.text) for Reset_Handler
    startup_sc32r803.o(.text) refers to system_sc32f1xxx.o(.text.SystemInit) for SystemInit
    startup_sc32r803.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_DeInit) refers to sc32f1xxx_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_Init) refers to sc32f1xxx_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_StructInit) refers to sc32f1xxx_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_Cmd) refers to sc32f1xxx_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_ConvModeConfig) refers to sc32f1xxx_adc.o(.text.ADC_ConvModeConfig) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_SetChannel) refers to sc32f1xxx_adc.o(.text.ADC_SetChannel) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_GetChannel) refers to sc32f1xxx_adc.o(.text.ADC_GetChannel) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_SoftwareStartConv) refers to sc32f1xxx_adc.o(.text.ADC_SoftwareStartConv) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to sc32f1xxx_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to sc32f1xxx_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to sc32f1xxx_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to sc32f1xxx_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_adc.o(.ARM.exidx.text.ADC_DMACmd) refers to sc32f1xxx_adc.o(.text.ADC_DMACmd) for [Anonymous Symbol]
    sc32f1xxx_btm.o(.ARM.exidx.text.BTM_DeInit) refers to sc32f1xxx_btm.o(.text.BTM_DeInit) for [Anonymous Symbol]
    sc32f1xxx_btm.o(.ARM.exidx.text.BTM_FSConfig) refers to sc32f1xxx_btm.o(.text.BTM_FSConfig) for [Anonymous Symbol]
    sc32f1xxx_btm.o(.ARM.exidx.text.BTM_Cmd) refers to sc32f1xxx_btm.o(.text.BTM_Cmd) for [Anonymous Symbol]
    sc32f1xxx_btm.o(.ARM.exidx.text.BTM_ITConfig) refers to sc32f1xxx_btm.o(.text.BTM_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_btm.o(.ARM.exidx.text.BTM_GetFlagStatus) refers to sc32f1xxx_btm.o(.text.BTM_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_btm.o(.ARM.exidx.text.BTM_ClearFlag) refers to sc32f1xxx_btm.o(.text.BTM_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_can.o(.text.CAN_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_DeInit) refers to sc32f1xxx_can.o(.text.CAN_DeInit) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_Init) refers to sc32f1xxx_can.o(.text.CAN_Init) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_StructInit) refers to sc32f1xxx_can.o(.text.CAN_StructInit) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_TBUFSelect) refers to sc32f1xxx_can.o(.text.CAN_TBUFSelect) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_FDMODECmd) refers to sc32f1xxx_can.o(.text.CAN_FDMODECmd) for [Anonymous Symbol]
    sc32f1xxx_can.o(.text.CAN_FBaudRate_Select) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    sc32f1xxx_can.o(.text.CAN_FBaudRate_Select) refers to dflti.o(.text) for __aeabi_i2d
    sc32f1xxx_can.o(.text.CAN_FBaudRate_Select) refers to dmul.o(.text) for __aeabi_dmul
    sc32f1xxx_can.o(.text.CAN_FBaudRate_Select) refers to dadd.o(.text) for __aeabi_dadd
    sc32f1xxx_can.o(.text.CAN_FBaudRate_Select) refers to dfixi.o(.text) for __aeabi_d2iz
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_FBaudRate_Select) refers to sc32f1xxx_can.o(.text.CAN_FBaudRate_Select) for [Anonymous Symbol]
    sc32f1xxx_can.o(.text.CAN_SBaudRate_Select) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    sc32f1xxx_can.o(.text.CAN_SBaudRate_Select) refers to dflti.o(.text) for __aeabi_i2d
    sc32f1xxx_can.o(.text.CAN_SBaudRate_Select) refers to dmul.o(.text) for __aeabi_dmul
    sc32f1xxx_can.o(.text.CAN_SBaudRate_Select) refers to dadd.o(.text) for __aeabi_dadd
    sc32f1xxx_can.o(.text.CAN_SBaudRate_Select) refers to dfixi.o(.text) for __aeabi_d2iz
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_SBaudRate_Select) refers to sc32f1xxx_can.o(.text.CAN_SBaudRate_Select) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_Trans_Select) refers to sc32f1xxx_can.o(.text.CAN_Trans_Select) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_RxDataALLStorageMode) refers to sc32f1xxx_can.o(.text.CAN_RxDataALLStorageMode) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_RxThresholdConfig) refers to sc32f1xxx_can.o(.text.CAN_RxThresholdConfig) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_PTBAutoRetransMode) refers to sc32f1xxx_can.o(.text.CAN_PTBAutoRetransMode) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_STBAutoRetransMode) refers to sc32f1xxx_can.o(.text.CAN_STBAutoRetransMode) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_FliterInit) refers to sc32f1xxx_can.o(.text.CAN_FliterInit) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_ModeSelect) refers to sc32f1xxx_can.o(.text.CAN_ModeSelect) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_Trans_Init) refers to sc32f1xxx_can.o(.text.CAN_Trans_Init) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_TransStop) refers to sc32f1xxx_can.o(.text.CAN_TransStop) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_PTBTransStop) refers to sc32f1xxx_can.o(.text.CAN_PTBTransStop) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_ReadBuffDataSize) refers to sc32f1xxx_can.o(.text.CAN_ReadBuffDataSize) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_TxDCompensateCmd) refers to sc32f1xxx_can.o(.text.CAN_TxDCompensateCmd) for [Anonymous Symbol]
    sc32f1xxx_can.o(.text.CAN_RecieveConfig) refers to sc32f1xxx_can.o(.rodata..L__const.CAN_RecieveConfig.Reallen) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_RecieveConfig) refers to sc32f1xxx_can.o(.text.CAN_RecieveConfig) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_ReadErrorCode) refers to sc32f1xxx_can.o(.text.CAN_ReadErrorCode) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_ReadALC) refers to sc32f1xxx_can.o(.text.CAN_ReadALC) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_ITConfig) refers to sc32f1xxx_can.o(.text.CAN_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetFlagStatus) refers to sc32f1xxx_can.o(.text.CAN_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_ClearFlag) refers to sc32f1xxx_can.o(.text.CAN_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetRACTIVE) refers to sc32f1xxx_can.o(.text.CAN_GetRACTIVE) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetTACTIVE) refers to sc32f1xxx_can.o(.text.CAN_GetTACTIVE) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_ErrorThresholdconfig) refers to sc32f1xxx_can.o(.text.CAN_ErrorThresholdconfig) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetTECNT) refers to sc32f1xxx_can.o(.text.CAN_GetTECNT) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetRECNT) refers to sc32f1xxx_can.o(.text.CAN_GetRECNT) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_ResetCmd) refers to sc32f1xxx_can.o(.text.CAN_ResetCmd) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_TIMEPOSConfig) refers to sc32f1xxx_can.o(.text.CAN_TIMEPOSConfig) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_TIMEENCmd) refers to sc32f1xxx_can.o(.text.CAN_TIMEENCmd) for [Anonymous Symbol]
    sc32f1xxx_can.o(.ARM.exidx.text.CAN_TIMECounterCmd) refers to sc32f1xxx_can.o(.text.CAN_TIMECounterCmd) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_DeInit) refers to sc32f1xxx_cmp.o(.text.CMP_DeInit) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_Init) refers to sc32f1xxx_cmp.o(.text.CMP_Init) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_StructInit) refers to sc32f1xxx_cmp.o(.text.CMP_StructInit) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_Cmd) refers to sc32f1xxx_cmp.o(.text.CMP_Cmd) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_SetNegativeChannel) refers to sc32f1xxx_cmp.o(.text.CMP_SetNegativeChannel) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_GetNegativeChannel) refers to sc32f1xxx_cmp.o(.text.CMP_GetNegativeChannel) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_SetPositiveChannel) refers to sc32f1xxx_cmp.o(.text.CMP_SetPositiveChannel) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_GetPositiveChannel) refers to sc32f1xxx_cmp.o(.text.CMP_GetPositiveChannel) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_GetCMPSTA) refers to sc32f1xxx_cmp.o(.text.CMP_GetCMPSTA) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_GetFlagStatus) refers to sc32f1xxx_cmp.o(.text.CMP_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_ClearFlag) refers to sc32f1xxx_cmp.o(.text.CMP_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.text.CRC_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_DeInit) refers to sc32f1xxx_crc.o(.text.CRC_DeInit) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Init) refers to sc32f1xxx_crc.o(.text.CRC_Init) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_PolynomialSizeSelect) refers to sc32f1xxx_crc.o(.text.CRC_PolynomialSizeSelect) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_SetInitRegister) refers to sc32f1xxx_crc.o(.text.CRC_SetInitRegister) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_SetPolynomial) refers to sc32f1xxx_crc.o(.text.CRC_SetPolynomial) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_ResetDR) refers to sc32f1xxx_crc.o(.text.CRC_ResetDR) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_CalcCRC) refers to sc32f1xxx_crc.o(.text.CRC_CalcCRC) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_CalcCRC16bits) refers to sc32f1xxx_crc.o(.text.CRC_CalcCRC16bits) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_CalcCRC8bits) refers to sc32f1xxx_crc.o(.text.CRC_CalcCRC8bits) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_GetCRC) refers to sc32f1xxx_crc.o(.text.CRC_GetCRC) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.text.CRC_Accumulate) refers to sc32f1xxx_crc.o(.text.CRC_Handle_8) for CRC_Handle_8
    sc32f1xxx_crc.o(.text.CRC_Accumulate) refers to sc32f1xxx_crc.o(.text.CRC_Handle_16) for CRC_Handle_16
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Accumulate) refers to sc32f1xxx_crc.o(.text.CRC_Accumulate) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Handle_8) refers to sc32f1xxx_crc.o(.text.CRC_Handle_8) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Handle_16) refers to sc32f1xxx_crc.o(.text.CRC_Handle_16) for [Anonymous Symbol]
    sc32f1xxx_crc.o(.text.CRC_Calculate) refers to sc32f1xxx_crc.o(.text.CRC_ResetDR) for CRC_ResetDR
    sc32f1xxx_crc.o(.text.CRC_Calculate) refers to sc32f1xxx_crc.o(.text.CRC_Handle_8) for CRC_Handle_8
    sc32f1xxx_crc.o(.text.CRC_Calculate) refers to sc32f1xxx_crc.o(.text.CRC_Handle_16) for CRC_Handle_16
    sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Calculate) refers to sc32f1xxx_crc.o(.text.CRC_Calculate) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.text.DMA_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_DeInit) refers to sc32f1xxx_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_Init) refers to sc32f1xxx_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_StructInit) refers to sc32f1xxx_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_Cmd) refers to sc32f1xxx_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_PauseCmd) refers to sc32f1xxx_dma.o(.text.DMA_PauseCmd) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_CHRQCmd) refers to sc32f1xxx_dma.o(.text.DMA_CHRQCmd) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_ChannelReset) refers to sc32f1xxx_dma.o(.text.DMA_ChannelReset) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_SetSrcAddress) refers to sc32f1xxx_dma.o(.text.DMA_SetSrcAddress) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_SetDstAddress) refers to sc32f1xxx_dma.o(.text.DMA_SetDstAddress) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter) refers to sc32f1xxx_dma.o(.text.DMA_SetCurrDataCounter) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter) refers to sc32f1xxx_dma.o(.text.DMA_GetCurrDataCounter) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_SoftwareTrigger) refers to sc32f1xxx_dma.o(.text.DMA_SoftwareTrigger) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_GetStatus) refers to sc32f1xxx_dma.o(.text.DMA_GetStatus) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_ITConfig) refers to sc32f1xxx_dma.o(.text.DMA_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to sc32f1xxx_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_ClearFlag) refers to sc32f1xxx_dma.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_dma.o(.ARM.exidx.text.DMA_DMACmd) refers to sc32f1xxx_dma.o(.text.DMA_DMACmd) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to sc32f1xxx_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_Init) refers to sc32f1xxx_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_SetDriveLevel) refers to sc32f1xxx_gpio.o(.text.GPIO_SetDriveLevel) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_ReadData) refers to sc32f1xxx_gpio.o(.text.GPIO_ReadData) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_ReadDataBit) refers to sc32f1xxx_gpio.o(.text.GPIO_ReadDataBit) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to sc32f1xxx_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to sc32f1xxx_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_Write) refers to sc32f1xxx_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to sc32f1xxx_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_TogglePins) refers to sc32f1xxx_gpio.o(.text.GPIO_TogglePins) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_Unlock) refers to sc32f1xxx_iap.o(.text.InitFlashToRam) for InitFlashToRam
    sc32f1xxx_iap.o(.text.IAP_Unlock) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_Unlock) refers to sc32f1xxx_iap.o(.text.IAP_Unlock) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.InitFlashToRam) refers to sc32f1xxx_iap.o(.bss.IapProgramInRam) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.InitFlashToRam) refers to sc32f1xxx_iap.o(.data.pWriteIapFun) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.InitFlashToRam) refers to sc32f1xxx_iap.o(.text.IAP_Program_InRam) for IAP_Program_InRam
    sc32f1xxx_iap.o(.ARM.exidx.text.InitFlashToRam) refers to sc32f1xxx_iap.o(.text.InitFlashToRam) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_Lock) refers to sc32f1xxx_iap.o(.text.DeInitFlashToRam) for DeInitFlashToRam
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_Lock) refers to sc32f1xxx_iap.o(.text.IAP_Lock) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.DeInitFlashToRam) refers to sc32f1xxx_iap.o(.data.pWriteIapFun) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.DeInitFlashToRam) refers to sc32f1xxx_iap.o(.text.IAP_NOP) for IAP_NOP
    sc32f1xxx_iap.o(.text.DeInitFlashToRam) refers to sc32f1xxx_iap.o(.bss.IapProgramInRam) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.DeInitFlashToRam) refers to sc32f1xxx_iap.o(.text.DeInitFlashToRam) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_WriteCmd) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_WriteCmd) refers to sc32f1xxx_iap.o(.text.IAP_WriteCmd) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_EraseSector) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_EraseSector) refers to sc32f1xxx_iap.o(.text.IAP_EraseSector) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_EEPROMEraseSector) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_EEPROMEraseSector) refers to sc32f1xxx_iap.o(.text.IAP_EEPROMEraseSector) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramWord) refers to sc32f1xxx_iap.o(.data.pWriteIapFun) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramWord) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramWord) refers to sc32f1xxx_iap.o(.text.IAP_ProgramWord) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramHalfWord) refers to sc32f1xxx_iap.o(.data.pWriteIapFun) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramHalfWord) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramHalfWord) refers to sc32f1xxx_iap.o(.text.IAP_ProgramHalfWord) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramByte) refers to sc32f1xxx_iap.o(.data.pWriteIapFun) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramByte) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramByte) refers to sc32f1xxx_iap.o(.text.IAP_ProgramByte) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadWord) refers to sc32f1xxx_iap.o(.text.IAP_ReadWord) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadHalfWord) refers to sc32f1xxx_iap.o(.text.IAP_ReadHalfWord) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadByte) refers to sc32f1xxx_iap.o(.text.IAP_ReadByte) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramWordArray) refers to memseta.o(.text) for __aeabi_memclr4
    sc32f1xxx_iap.o(.text.IAP_ProgramWordArray) refers to sc32f1xxx_iap.o(.text.IAP_ProgramArray_InRam) for IAP_ProgramArray_InRam
    sc32f1xxx_iap.o(.text.IAP_ProgramWordArray) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramWordArray) refers to sc32f1xxx_iap.o(.text.IAP_ProgramWordArray) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramArray_InRam) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramArray_InRam) refers to sc32f1xxx_iap.o(.text.IAP_ProgramArray_InRam) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramHalfWordArray) refers to memseta.o(.text) for __aeabi_memclr4
    sc32f1xxx_iap.o(.text.IAP_ProgramHalfWordArray) refers to sc32f1xxx_iap.o(.text.IAP_ProgramArray_InRam) for IAP_ProgramArray_InRam
    sc32f1xxx_iap.o(.text.IAP_ProgramHalfWordArray) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramHalfWordArray) refers to sc32f1xxx_iap.o(.text.IAP_ProgramHalfWordArray) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_ProgramByteArray) refers to memseta.o(.text) for __aeabi_memclr4
    sc32f1xxx_iap.o(.text.IAP_ProgramByteArray) refers to sc32f1xxx_iap.o(.text.IAP_ProgramArray_InRam) for IAP_ProgramArray_InRam
    sc32f1xxx_iap.o(.text.IAP_ProgramByteArray) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramByteArray) refers to sc32f1xxx_iap.o(.text.IAP_ProgramByteArray) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadWordArray) refers to sc32f1xxx_iap.o(.text.IAP_ReadWordArray) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadHalfWordArray) refers to sc32f1xxx_iap.o(.text.IAP_ReadHalfWordArray) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadByteArray) refers to sc32f1xxx_iap.o(.text.IAP_ReadByteArray) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_SoftwareReset) refers to sc32f1xxx_iap.o(.text.IAP_SoftwareReset) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.text.IAP_Program_InRam) refers to sc32f1xxx_iap.o(.data.IapWriteFlag) for IapWriteFlag
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_Program_InRam) refers to sc32f1xxx_iap.o(.text.IAP_Program_InRam) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.ARM.exidx.text.IAP_NOP) refers to sc32f1xxx_iap.o(.text.IAP_NOP) for [Anonymous Symbol]
    sc32f1xxx_iap.o(.data.pWriteIapFun) refers to sc32f1xxx_iap.o(.text.IAP_NOP) for IAP_NOP
    sc32f1xxx_int.o(.ARM.exidx.text.INT_DeInit) refers to sc32f1xxx_int.o(.text.INT_DeInit) for [Anonymous Symbol]
    sc32f1xxx_int.o(.ARM.exidx.text.INT_Init) refers to sc32f1xxx_int.o(.text.INT_Init) for [Anonymous Symbol]
    sc32f1xxx_int.o(.ARM.exidx.text.INT_TriggerMode) refers to sc32f1xxx_int.o(.text.INT_TriggerMode) for [Anonymous Symbol]
    sc32f1xxx_int.o(.ARM.exidx.text.INT_ITConfig) refers to sc32f1xxx_int.o(.text.INT_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_int.o(.ARM.exidx.text.INT_GetFlagStatus) refers to sc32f1xxx_int.o(.text.INT_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_int.o(.ARM.exidx.text.INT_ClearFlag) refers to sc32f1xxx_int.o(.text.INT_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_lcd.o(.text.LCD_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_DeInit) refers to sc32f1xxx_lcd.o(.text.LCD_DeInit) for [Anonymous Symbol]
    sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_Init) refers to sc32f1xxx_lcd.o(.text.LCD_Init) for [Anonymous Symbol]
    sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_StructInit) refers to sc32f1xxx_lcd.o(.text.LCD_StructInit) for [Anonymous Symbol]
    sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_Cmd) refers to sc32f1xxx_lcd.o(.text.LCD_Cmd) for [Anonymous Symbol]
    sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_COMConfig) refers to sc32f1xxx_lcd.o(.text.LCD_COMConfig) for [Anonymous Symbol]
    sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_SEGConfig) refers to sc32f1xxx_lcd.o(.text.LCD_SEGConfig) for [Anonymous Symbol]
    sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_Write) refers to sc32f1xxx_lcd.o(.text.LCD_Write) for [Anonymous Symbol]
    sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_CustomModeScan) refers to sc32f1xxx_lcd.o(.text.LCD_CustomModeScan) for [Anonymous Symbol]
    sc32f1xxx_led.o(.text.LED_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    sc32f1xxx_led.o(.ARM.exidx.text.LED_DeInit) refers to sc32f1xxx_led.o(.text.LED_DeInit) for [Anonymous Symbol]
    sc32f1xxx_led.o(.ARM.exidx.text.LED_Init) refers to sc32f1xxx_led.o(.text.LED_Init) for [Anonymous Symbol]
    sc32f1xxx_led.o(.ARM.exidx.text.LED_StructInit) refers to sc32f1xxx_led.o(.text.LED_StructInit) for [Anonymous Symbol]
    sc32f1xxx_led.o(.ARM.exidx.text.LED_Cmd) refers to sc32f1xxx_led.o(.text.LED_Cmd) for [Anonymous Symbol]
    sc32f1xxx_led.o(.ARM.exidx.text.LED_Write) refers to sc32f1xxx_led.o(.text.LED_Write) for [Anonymous Symbol]
    sc32f1xxx_led.o(.ARM.exidx.text.LED_COMConfig) refers to sc32f1xxx_led.o(.text.LED_COMConfig) for [Anonymous Symbol]
    sc32f1xxx_led.o(.ARM.exidx.text.LED_SEGConfig) refers to sc32f1xxx_led.o(.text.LED_SEGConfig) for [Anonymous Symbol]
    sc32f1xxx_led.o(.ARM.exidx.text.LED_CustomModeScan) refers to sc32f1xxx_led.o(.text.LED_CustomModeScan) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.text.LEDPWM_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_DeInit) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_DeInit) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_StructInit) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_StructInit) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_Init) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_Init) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_Cmd) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_Cmd) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_SetPrescaler) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_SetPrescaler) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_GetPrescaler) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_GetPrescaler) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_SetCycle) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_SetCycle) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_GetCycle) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_GetCycle) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_SetDuty) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_SetDuty) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_GetDuty) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_GetDuty) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_ITConfig) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_GetFlagStatus) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_ClearFlag) refers to sc32f1xxx_ledpwm.o(.text.LEDPWM_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_op.o(.ARM.exidx.text.OP_DeInit) refers to sc32f1xxx_op.o(.text.OP_DeInit) for [Anonymous Symbol]
    sc32f1xxx_op.o(.ARM.exidx.text.OP_Init) refers to sc32f1xxx_op.o(.text.OP_Init) for [Anonymous Symbol]
    sc32f1xxx_op.o(.ARM.exidx.text.OP_Cmd) refers to sc32f1xxx_op.o(.text.OP_Cmd) for [Anonymous Symbol]
    sc32f1xxx_op.o(.ARM.exidx.text.OP_OffsetTrimConfig) refers to sc32f1xxx_op.o(.text.OP_OffsetTrimConfig) for [Anonymous Symbol]
    sc32f1xxx_op.o(.ARM.exidx.text.OP_GainSelection) refers to sc32f1xxx_op.o(.text.OP_GainSelection) for [Anonymous Symbol]
    sc32f1xxx_op.o(.ARM.exidx.text.OP_OutputSelection) refers to sc32f1xxx_op.o(.text.OP_OutputSelection) for [Anonymous Symbol]
    sc32f1xxx_op.o(.ARM.exidx.text.OP_OffsetSet) refers to sc32f1xxx_op.o(.text.OP_OffsetSet) for [Anonymous Symbol]
    sc32f1xxx_option.o(.ARM.exidx.text.OPTION_WDTCmd) refers to sc32f1xxx_option.o(.text.OPTION_WDTCmd) for [Anonymous Symbol]
    sc32f1xxx_option.o(.ARM.exidx.text.OPTION_LVRConfig) refers to sc32f1xxx_option.o(.text.OPTION_LVRConfig) for [Anonymous Symbol]
    sc32f1xxx_option.o(.ARM.exidx.text.OPTION_JTAGCmd) refers to sc32f1xxx_option.o(.text.OPTION_JTAGCmd) for [Anonymous Symbol]
    sc32f1xxx_option.o(.ARM.exidx.text.OPTION_IAPPORA) refers to sc32f1xxx_option.o(.text.OPTION_IAPPORA) for [Anonymous Symbol]
    sc32f1xxx_option.o(.ARM.exidx.text.OPTION_IAPPORB) refers to sc32f1xxx_option.o(.text.OPTION_IAPPORB) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.text.PWM_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB0PeriphResetCmd) for RCC_APB0PeriphResetCmd
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_DeInit) refers to sc32f1xxx_pwm.o(.text.PWM_DeInit) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_StructInit) refers to sc32f1xxx_pwm.o(.text.PWM_StructInit) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_Init) refers to sc32f1xxx_pwm.o(.text.PWM_Init) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_RisingDeadTimeConfig) refers to sc32f1xxx_pwm.o(.text.PWM_RisingDeadTimeConfig) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_FallingDeadTimeConfig) refers to sc32f1xxx_pwm.o(.text.PWM_FallingDeadTimeConfig) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_Cmd) refers to sc32f1xxx_pwm.o(.text.PWM_Cmd) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_SetPrescaler) refers to sc32f1xxx_pwm.o(.text.PWM_SetPrescaler) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_GetPrescaler) refers to sc32f1xxx_pwm.o(.text.PWM_GetPrescaler) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_SetCycle) refers to sc32f1xxx_pwm.o(.text.PWM_SetCycle) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_GetCycle) refers to sc32f1xxx_pwm.o(.text.PWM_GetCycle) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_SetDuty) refers to sc32f1xxx_pwm.o(.text.PWM_SetDuty) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_GetDuty) refers to sc32f1xxx_pwm.o(.text.PWM_GetDuty) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_FDStructInit) refers to sc32f1xxx_pwm.o(.text.PWM_FDStructInit) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_FDInit) refers to sc32f1xxx_pwm.o(.text.PWM_FDInit) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_FDCmd) refers to sc32f1xxx_pwm.o(.text.PWM_FDCmd) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_ITConfig) refers to sc32f1xxx_pwm.o(.text.PWM_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_GetFlagStatus) refers to sc32f1xxx_pwm.o(.text.PWM_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_ClearFlag) refers to sc32f1xxx_pwm.o(.text.PWM_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_pwr.o(.ARM.exidx.text.PWR_EnterIDLEMode) refers to sc32f1xxx_pwr.o(.text.PWR_EnterIDLEMode) for [Anonymous Symbol]
    sc32f1xxx_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode) refers to sc32f1xxx_pwr.o(.text.PWR_EnterSTOPMode) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.text.QSPI_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB0PeriphResetCmd) for RCC_APB0PeriphResetCmd
    sc32f1xxx_qspi.o(.text.QSPI_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_DeInit) refers to sc32f1xxx_qspi.o(.text.QSPI_DeInit) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_StructInit) refers to sc32f1xxx_qspi.o(.text.QSPI_StructInit) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Init) refers to sc32f1xxx_qspi.o(.text.QSPI_Init) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Cmd) refers to sc32f1xxx_qspi.o(.text.QSPI_Cmd) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SetDataLength) refers to sc32f1xxx_qspi.o(.text.QSPI_SetDataLength) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_LModeSelect) refers to sc32f1xxx_qspi.o(.text.QSPI_LModeSelect) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ModeSelect) refers to sc32f1xxx_qspi.o(.text.QSPI_ModeSelect) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Write_ComSet) refers to sc32f1xxx_qspi.o(.text.QSPI_Write_ComSet) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendData8) refers to sc32f1xxx_qspi.o(.text.QSPI_SendData8) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendData16) refers to sc32f1xxx_qspi.o(.text.QSPI_SendData16) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendData32) refers to sc32f1xxx_qspi.o(.text.QSPI_SendData32) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendDataFIFO) refers to sc32f1xxx_qspi.o(.text.QSPI_SendDataFIFO) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.text.QSPI_SendMultipleData) refers to sc32f1xxx_qspi.o(.text.QSPI_GetFlagStatus) for QSPI_GetFlagStatus
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendMultipleData) refers to sc32f1xxx_qspi.o(.text.QSPI_SendMultipleData) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_GetFlagStatus) refers to sc32f1xxx_qspi.o(.text.QSPI_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Read_ComSet) refers to sc32f1xxx_qspi.o(.text.QSPI_Read_ComSet) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_CLKONLYSet) refers to sc32f1xxx_qspi.o(.text.QSPI_CLKONLYSet) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveData8) refers to sc32f1xxx_qspi.o(.text.QSPI_ReceiveData8) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveData16) refers to sc32f1xxx_qspi.o(.text.QSPI_ReceiveData16) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveData32) refers to sc32f1xxx_qspi.o(.text.QSPI_ReceiveData32) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Receivelen) refers to sc32f1xxx_qspi.o(.text.QSPI_Receivelen) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.text.QSPI_ReceiveMultipleData) refers to sc32f1xxx_qspi.o(.text.QSPI_GetFlagStatus) for QSPI_GetFlagStatus
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveMultipleData) refers to sc32f1xxx_qspi.o(.text.QSPI_ReceiveMultipleData) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveDataFIFO) refers to sc32f1xxx_qspi.o(.text.QSPI_ReceiveDataFIFO) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ITConfig) refers to sc32f1xxx_qspi.o(.text.QSPI_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ClearFlag) refers to sc32f1xxx_qspi.o(.text.QSPI_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_DMACmd) refers to sc32f1xxx_qspi.o(.text.QSPI_DMACmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_Unlock) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_HXTCmd) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_HXTCmd) refers to sc32f1xxx_rcc.o(.text.RCC_HXTCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_HIRCCmd) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_HIRCCmd) refers to sc32f1xxx_rcc.o(.text.RCC_HIRCCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_LXTCmd) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_LXTCmd) refers to sc32f1xxx_rcc.o(.text.RCC_LXTCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_LIRCCmd) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_LIRCCmd) refers to sc32f1xxx_rcc.o(.text.RCC_LIRCCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_HIRCDIV1Cmd) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_HIRCDIV1Cmd) refers to sc32f1xxx_rcc.o(.text.RCC_HIRCDIV1Cmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB0Cmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB0Cmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB1Cmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB1Cmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB2Cmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB2Cmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_SYSCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to sc32f1xxx_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB0Config) refers to sc32f1xxx_rcc.o(.text.RCC_APB0Config) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB1Config) refers to sc32f1xxx_rcc.o(.text.RCC_APB1Config) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB2Config) refers to sc32f1xxx_rcc.o(.text.RCC_APB2Config) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to sc32f1xxx_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_WaitConfig) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_WaitConfig) refers to sc32f1xxx_rcc.o(.text.RCC_WaitConfig) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_PWM0CLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_PWM0CLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_PWM0CLKConfig) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_LCDLEDCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_LCDLEDCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_LCDLEDCLKConfig) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_BTMCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_BTMCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_BTMCLKConfig) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to sc32f1xxx_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB0PeriphClockCmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB0PeriphClockCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to sc32f1xxx_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB0PeriphResetCmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB0PeriphResetCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to sc32f1xxx_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_NMICmd) refers to sc32f1xxx_rcc.o(.text.RCC_NMICmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_SystickCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SystickCLKConfig) refers to sc32f1xxx_rcc.o(.text.RCC_SystickCLKConfig) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SystickSetCounter) refers to sc32f1xxx_rcc.o(.text.RCC_SystickSetCounter) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SystickCmd) refers to sc32f1xxx_rcc.o(.text.RCC_SystickCmd) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SystickGetFlagStatus) refers to sc32f1xxx_rcc.o(.text.RCC_SystickGetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.RCC_ITConfig) refers to sc32f1xxx_rcc.o(.text.RCC_Unlock) for RCC_Unlock
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to sc32f1xxx_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to sc32f1xxx_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to sc32f1xxx_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.SC_IncTick) refers to sc32f1xxx_rcc.o(.bss.uwTick) for uwTick
    sc32f1xxx_rcc.o(.ARM.exidx.text.SC_IncTick) refers to sc32f1xxx_rcc.o(.text.SC_IncTick) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.SC_Delay) refers to sc32f1xxx_rcc.o(.bss.uwTick) for uwTick
    sc32f1xxx_rcc.o(.ARM.exidx.text.SC_Delay) refers to sc32f1xxx_rcc.o(.text.SC_Delay) for [Anonymous Symbol]
    sc32f1xxx_rcc.o(.text.SC_Delay_us) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    sc32f1xxx_rcc.o(.text.SC_Delay_us) refers to sc32f1xxx_rcc.o(.bss.uwTick) for uwTick
    sc32f1xxx_rcc.o(.ARM.exidx.text.SC_Delay_us) refers to sc32f1xxx_rcc.o(.text.SC_Delay_us) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.text.SPI_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB0PeriphResetCmd) for RCC_APB0PeriphResetCmd
    sc32f1xxx_spi.o(.text.SPI_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_DeInit) refers to sc32f1xxx_spi.o(.text.SPI_DeInit) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_StructInit) refers to sc32f1xxx_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_Init) refers to sc32f1xxx_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_Cmd) refers to sc32f1xxx_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_SetMode) refers to sc32f1xxx_spi.o(.text.SPI_SetMode) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to sc32f1xxx_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_SendDataFIFO) refers to sc32f1xxx_spi.o(.text.SPI_SendDataFIFO) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_ReceiveDataFIFO) refers to sc32f1xxx_spi.o(.text.SPI_ReceiveDataFIFO) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_SendData) refers to sc32f1xxx_spi.o(.text.SPI_SendData) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_ReceiveData) refers to sc32f1xxx_spi.o(.text.SPI_ReceiveData) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_PinRemapConfig) refers to sc32f1xxx_spi.o(.text.SPI_PinRemapConfig) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_ITConfig) refers to sc32f1xxx_spi.o(.text.SPI_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_GetFlagStatus) refers to sc32f1xxx_spi.o(.text.SPI_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_ClearFlag) refers to sc32f1xxx_spi.o(.text.SPI_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_spi.o(.ARM.exidx.text.SPI_DMACmd) refers to sc32f1xxx_spi.o(.text.SPI_DMACmd) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.text.TIM_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB0PeriphResetCmd) for RCC_APB0PeriphResetCmd
    sc32f1xxx_tim.o(.text.TIM_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_DeInit) refers to sc32f1xxx_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_TIMBaseInit) refers to sc32f1xxx_tim.o(.text.TIM_TIMBaseInit) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to sc32f1xxx_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_Cmd) refers to sc32f1xxx_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to sc32f1xxx_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to sc32f1xxx_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to sc32f1xxx_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetAutoreload) refers to sc32f1xxx_tim.o(.text.TIM_GetAutoreload) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_SetPerscaler) refers to sc32f1xxx_tim.o(.text.TIM_SetPerscaler) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to sc32f1xxx_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ICInit) refers to sc32f1xxx_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to sc32f1xxx_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ICCmd) refers to sc32f1xxx_tim.o(.text.TIM_ICCmd) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetRisingCapture) refers to sc32f1xxx_tim.o(.text.TIM_GetRisingCapture) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetFailingCapture) refers to sc32f1xxx_tim.o(.text.TIM_GetFailingCapture) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PWMInit) refers to sc32f1xxx_tim.o(.text.TIM_PWMInit) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PWMStructInit) refers to sc32f1xxx_tim.o(.text.TIM_PWMStructInit) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PWMSetDuty) refers to sc32f1xxx_tim.o(.text.TIM_PWMSetDuty) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PWMGetDuty) refers to sc32f1xxx_tim.o(.text.TIM_PWMGetDuty) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ClockOutputCmd) refers to sc32f1xxx_tim.o(.text.TIM_ClockOutputCmd) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PinRemapConfig) refers to sc32f1xxx_tim.o(.text.TIM_PinRemapConfig) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to sc32f1xxx_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to sc32f1xxx_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to sc32f1xxx_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to sc32f1xxx_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.text.TWI_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB0PeriphResetCmd) for RCC_APB0PeriphResetCmd
    sc32f1xxx_twi.o(.text.TWI_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_DeInit) refers to sc32f1xxx_twi.o(.text.TWI_DeInit) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_StructInit) refers to sc32f1xxx_twi.o(.text.TWI_StructInit) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_Init) refers to sc32f1xxx_twi.o(.text.TWI_Init) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_Cmd) refers to sc32f1xxx_twi.o(.text.TWI_Cmd) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_AcknowledgeConfig) refers to sc32f1xxx_twi.o(.text.TWI_AcknowledgeConfig) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GeneralCallCmd) refers to sc32f1xxx_twi.o(.text.TWI_GeneralCallCmd) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_StretchClockConfig) refers to sc32f1xxx_twi.o(.text.TWI_StretchClockConfig) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_SetNbytes) refers to sc32f1xxx_twi.o(.text.TWI_SetNbytes) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GetNbytes) refers to sc32f1xxx_twi.o(.text.TWI_GetNbytes) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GenerateSTART) refers to sc32f1xxx_twi.o(.text.TWI_GenerateSTART) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GenerateSTOP) refers to sc32f1xxx_twi.o(.text.TWI_GenerateSTOP) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_Send7bitAddress) refers to sc32f1xxx_twi.o(.text.TWI_Send7bitAddress) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_SendData) refers to sc32f1xxx_twi.o(.text.TWI_SendData) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_ReceiveData) refers to sc32f1xxx_twi.o(.text.TWI_ReceiveData) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_PinRemapConfig) refers to sc32f1xxx_twi.o(.text.TWI_PinRemapConfig) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_ITConfig) refers to sc32f1xxx_twi.o(.text.TWI_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GetFlagStatus) refers to sc32f1xxx_twi.o(.text.TWI_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_ClearFlag) refers to sc32f1xxx_twi.o(.text.TWI_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GetStateMachine) refers to sc32f1xxx_twi.o(.text.TWI_GetStateMachine) for [Anonymous Symbol]
    sc32f1xxx_twi.o(.ARM.exidx.text.TWI_DMACmd) refers to sc32f1xxx_twi.o(.text.TWI_DMACmd) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.text.UART_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB0PeriphResetCmd) for RCC_APB0PeriphResetCmd
    sc32f1xxx_uart.o(.text.UART_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    sc32f1xxx_uart.o(.text.UART_DeInit) refers to sc32f1xxx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_DeInit) refers to sc32f1xxx_uart.o(.text.UART_DeInit) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.text.UART_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_Init) refers to sc32f1xxx_uart.o(.text.UART_Init) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_TXCmd) refers to sc32f1xxx_uart.o(.text.UART_TXCmd) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_RXCmd) refers to sc32f1xxx_uart.o(.text.UART_RXCmd) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_SendData) refers to sc32f1xxx_uart.o(.text.UART_SendData) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_ReceiveData) refers to sc32f1xxx_uart.o(.text.UART_ReceiveData) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_PinRemapConfig) refers to sc32f1xxx_uart.o(.text.UART_PinRemapConfig) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_ITConfig) refers to sc32f1xxx_uart.o(.text.UART_ITConfig) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_GetFlagStatus) refers to sc32f1xxx_uart.o(.text.UART_GetFlagStatus) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_ClearFlag) refers to sc32f1xxx_uart.o(.text.UART_ClearFlag) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_DMACmd) refers to sc32f1xxx_uart.o(.text.UART_DMACmd) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_LIN_MODE) refers to sc32f1xxx_uart.o(.text.UART_LIN_MODE) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_LIN_BKSIZE) refers to sc32f1xxx_uart.o(.text.UART_LIN_BKSIZE) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_SendBreak) refers to sc32f1xxx_uart.o(.text.UART_SendBreak) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_LIN_SLVARENE) refers to sc32f1xxx_uart.o(.text.UART_LIN_SLVARENE) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.UART_LIN_LBDL) refers to sc32f1xxx_uart.o(.text.UART_LIN_LBDL) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.ARM.exidx.text.LIN_CalID) refers to sc32f1xxx_uart.o(.text.LIN_CalID) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.text.LINCalChecksum) refers to sc32f1xxx_uart.o(.text.LIN_CalID) for LIN_CalID
    sc32f1xxx_uart.o(.ARM.exidx.text.LINCalChecksum) refers to sc32f1xxx_uart.o(.text.LINCalChecksum) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.text.Printf_UartInit) refers to sc32f1xxx_uart.o(.bss.Printf_Uart) for Printf_Uart
    sc32f1xxx_uart.o(.ARM.exidx.text.Printf_UartInit) refers to sc32f1xxx_uart.o(.text.Printf_UartInit) for [Anonymous Symbol]
    sc32f1xxx_uart.o(.text.fputc) refers to sc32f1xxx_uart.o(.text.UART_SendData) for UART_SendData
    sc32f1xxx_uart.o(.text.fputc) refers to sc32f1xxx_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    sc32f1xxx_uart.o(.text.fputc) refers to sc32f1xxx_uart.o(.text.UART_ClearFlag) for UART_ClearFlag
    sc32f1xxx_uart.o(.text.fputc) refers to sc32f1xxx_uart.o(.bss.Printf_Uart) for Printf_Uart
    sc32f1xxx_uart.o(.ARM.exidx.text.fputc) refers to sc32f1xxx_uart.o(.text.fputc) for [Anonymous Symbol]
    sc32f1xxx_wdt.o(.ARM.exidx.text.WDT_DeInit) refers to sc32f1xxx_wdt.o(.text.WDT_DeInit) for [Anonymous Symbol]
    sc32f1xxx_wdt.o(.ARM.exidx.text.WDT_SetOverTime) refers to sc32f1xxx_wdt.o(.text.WDT_SetOverTime) for [Anonymous Symbol]
    sc32f1xxx_wdt.o(.ARM.exidx.text.WDT_Cmd) refers to sc32f1xxx_wdt.o(.text.WDT_Cmd) for [Anonymous Symbol]
    sc32f1xxx_wdt.o(.ARM.exidx.text.WDT_SetReload) refers to sc32f1xxx_wdt.o(.text.WDT_SetReload) for [Anonymous Symbol]
    system_sc32f1xxx.o(.ARM.exidx.text.SystemInit) refers to system_sc32f1xxx.o(.text.SystemInit) for [Anonymous Symbol]
    main.o(.text.main) refers to printfa.o(i.__0printf) for printf
    main.o(.text.main) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to sc32f1xxx_uart.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to sc32f1xxx_uart.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to sc32f1xxx_uart.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to sc32f1xxx_uart.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_sc32r803.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_sc32r803.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing startup_sc32r803.o(HEAP), (0 bytes).
    Removing sc32f1xxx_adc.o(.text), (0 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_DeInit), (28 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_Init), (60 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_StructInit), (30 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_Cmd), (46 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_ConvModeConfig), (46 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_ConvModeConfig), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_SetChannel), (38 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_SetChannel), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_GetChannel), (16 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_GetChannel), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_SoftwareStartConv), (18 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_SoftwareStartConv), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_GetConversionValue), (14 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_ITConfig), (50 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_ClearFlag), (16 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing sc32f1xxx_adc.o(.text.ADC_DMACmd), (46 bytes).
    Removing sc32f1xxx_adc.o(.ARM.exidx.text.ADC_DMACmd), (8 bytes).
    Removing sc32f1xxx_btm.o(.text), (0 bytes).
    Removing sc32f1xxx_btm.o(.text.BTM_DeInit), (40 bytes).
    Removing sc32f1xxx_btm.o(.ARM.exidx.text.BTM_DeInit), (8 bytes).
    Removing sc32f1xxx_btm.o(.text.BTM_FSConfig), (38 bytes).
    Removing sc32f1xxx_btm.o(.ARM.exidx.text.BTM_FSConfig), (8 bytes).
    Removing sc32f1xxx_btm.o(.text.BTM_Cmd), (48 bytes).
    Removing sc32f1xxx_btm.o(.ARM.exidx.text.BTM_Cmd), (8 bytes).
    Removing sc32f1xxx_btm.o(.text.BTM_ITConfig), (50 bytes).
    Removing sc32f1xxx_btm.o(.ARM.exidx.text.BTM_ITConfig), (8 bytes).
    Removing sc32f1xxx_btm.o(.text.BTM_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_btm.o(.ARM.exidx.text.BTM_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_btm.o(.text.BTM_ClearFlag), (18 bytes).
    Removing sc32f1xxx_btm.o(.ARM.exidx.text.BTM_ClearFlag), (8 bytes).
    Removing sc32f1xxx_can.o(.text), (0 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_DeInit), (28 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_DeInit), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_Init), (664 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_Init), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_StructInit), (102 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_StructInit), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_TBUFSelect), (68 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_TBUFSelect), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_FDMODECmd), (46 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_FDMODECmd), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_FBaudRate_Select), (280 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_FBaudRate_Select), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_SBaudRate_Select), (280 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_SBaudRate_Select), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_Trans_Select), (92 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_Trans_Select), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_RxDataALLStorageMode), (56 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_RxDataALLStorageMode), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_RxThresholdConfig), (22 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_RxThresholdConfig), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_PTBAutoRetransMode), (42 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_PTBAutoRetransMode), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_STBAutoRetransMode), (42 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_STBAutoRetransMode), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_FliterInit), (230 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_FliterInit), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_ModeSelect), (156 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_ModeSelect), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_Trans_Init), (276 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_Trans_Init), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_TransStop), (20 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_TransStop), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_PTBTransStop), (20 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_PTBTransStop), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_ReadBuffDataSize), (18 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_ReadBuffDataSize), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_TxDCompensateCmd), (90 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_TxDCompensateCmd), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_RecieveConfig), (328 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_RecieveConfig), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_ReadErrorCode), (22 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_ReadErrorCode), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_ReadALC), (16 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_ReadALC), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_ITConfig), (98 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_ITConfig), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_ClearFlag), (396 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_ClearFlag), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_GetRACTIVE), (38 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetRACTIVE), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_GetTACTIVE), (38 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetTACTIVE), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_ErrorThresholdconfig), (64 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_ErrorThresholdconfig), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_GetTECNT), (20 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetTECNT), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_GetRECNT), (20 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_GetRECNT), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_ResetCmd), (42 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_ResetCmd), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_TIMEPOSConfig), (96 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_TIMEPOSConfig), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_TIMEENCmd), (46 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_TIMEENCmd), (8 bytes).
    Removing sc32f1xxx_can.o(.text.CAN_TIMECounterCmd), (46 bytes).
    Removing sc32f1xxx_can.o(.ARM.exidx.text.CAN_TIMECounterCmd), (8 bytes).
    Removing sc32f1xxx_can.o(.rodata..L__const.CAN_RecieveConfig.Reallen), (64 bytes).
    Removing sc32f1xxx_cmp.o(.text), (0 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_DeInit), (40 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_DeInit), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_Init), (52 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_Init), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_StructInit), (22 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_StructInit), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_Cmd), (48 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_Cmd), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_SetNegativeChannel), (32 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_SetNegativeChannel), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_GetNegativeChannel), (18 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_GetNegativeChannel), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_SetPositiveChannel), (30 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_SetPositiveChannel), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_GetPositiveChannel), (16 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_GetPositiveChannel), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_GetCMPSTA), (38 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_GetCMPSTA), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_cmp.o(.text.CMP_ClearFlag), (18 bytes).
    Removing sc32f1xxx_cmp.o(.ARM.exidx.text.CMP_ClearFlag), (8 bytes).
    Removing sc32f1xxx_crc.o(.text), (0 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_DeInit), (26 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_DeInit), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_Init), (112 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Init), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_PolynomialSizeSelect), (32 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_PolynomialSizeSelect), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_SetInitRegister), (20 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_SetInitRegister), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_SetPolynomial), (20 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_SetPolynomial), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_ResetDR), (16 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_ResetDR), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_CalcCRC), (20 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_CalcCRC), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_CalcCRC16bits), (24 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_CalcCRC16bits), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_CalcCRC8bits), (24 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_CalcCRC8bits), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_GetCRC), (12 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_GetCRC), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_Accumulate), (120 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Accumulate), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_Handle_8), (220 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Handle_8), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_Handle_16), (96 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Handle_16), (8 bytes).
    Removing sc32f1xxx_crc.o(.text.CRC_Calculate), (124 bytes).
    Removing sc32f1xxx_crc.o(.ARM.exidx.text.CRC_Calculate), (8 bytes).
    Removing sc32f1xxx_dac.o(.text), (0 bytes).
    Removing sc32f1xxx_dma.o(.text), (0 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_DeInit), (38 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_Init), (92 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_StructInit), (38 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_Cmd), (42 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_PauseCmd), (48 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_PauseCmd), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_CHRQCmd), (46 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_CHRQCmd), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_ChannelReset), (18 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_ChannelReset), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_SetSrcAddress), (16 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_SetSrcAddress), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_SetDstAddress), (16 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_SetDstAddress), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_SetCurrDataCounter), (16 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_GetCurrDataCounter), (12 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_SoftwareTrigger), (16 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_SoftwareTrigger), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_GetStatus), (20 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_GetStatus), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_ITConfig), (44 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_ITConfig), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_ClearFlag), (16 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing sc32f1xxx_dma.o(.text.DMA_DMACmd), (44 bytes).
    Removing sc32f1xxx_dma.o(.ARM.exidx.text.DMA_DMACmd), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text), (0 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_DeInit), (48 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_Init), (198 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_SetDriveLevel), (100 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_SetDriveLevel), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_ReadData), (14 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_ReadData), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_ReadDataBit), (44 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_ReadDataBit), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_SetBits), (64 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_ResetBits), (64 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_Write), (18 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_WriteBit), (50 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing sc32f1xxx_gpio.o(.text.GPIO_TogglePins), (78 bytes).
    Removing sc32f1xxx_gpio.o(.ARM.exidx.text.GPIO_TogglePins), (8 bytes).
    Removing sc32f1xxx_iap.o(.text), (0 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_Unlock), (76 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_Unlock), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.InitFlashToRam), (76 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.InitFlashToRam), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_Lock), (20 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_Lock), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.DeInitFlashToRam), (64 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.DeInitFlashToRam), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_WriteCmd), (60 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_WriteCmd), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_EraseSector), (80 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_EraseSector), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_EEPROMEraseSector), (80 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_EEPROMEraseSector), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ProgramWord), (132 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramWord), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ProgramHalfWord), (140 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramHalfWord), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ProgramByte), (140 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramByte), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ReadWord), (16 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadWord), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ReadHalfWord), (18 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadHalfWord), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ReadByte), (18 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadByte), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ProgramWordArray), (308 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramWordArray), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ProgramArray_InRam), (360 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramArray_InRam), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ProgramHalfWordArray), (308 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramHalfWordArray), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ProgramByteArray), (296 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ProgramByteArray), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ReadWordArray), (82 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadWordArray), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ReadHalfWordArray), (82 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadHalfWordArray), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_ReadByteArray), (66 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_ReadByteArray), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_SoftwareReset), (24 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_SoftwareReset), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_Program_InRam), (248 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_Program_InRam), (8 bytes).
    Removing sc32f1xxx_iap.o(.text.IAP_NOP), (6 bytes).
    Removing sc32f1xxx_iap.o(.ARM.exidx.text.IAP_NOP), (8 bytes).
    Removing sc32f1xxx_iap.o(.data.IapWriteFlag), (4 bytes).
    Removing sc32f1xxx_iap.o(.data.pWriteIapFun), (4 bytes).
    Removing sc32f1xxx_iap.o(.bss.IapProgramInRam), (180 bytes).
    Removing sc32f1xxx_int.o(.text), (0 bytes).
    Removing sc32f1xxx_int.o(.text.INT_DeInit), (68 bytes).
    Removing sc32f1xxx_int.o(.ARM.exidx.text.INT_DeInit), (8 bytes).
    Removing sc32f1xxx_int.o(.text.INT_Init), (280 bytes).
    Removing sc32f1xxx_int.o(.ARM.exidx.text.INT_Init), (8 bytes).
    Removing sc32f1xxx_int.o(.text.INT_TriggerMode), (92 bytes).
    Removing sc32f1xxx_int.o(.ARM.exidx.text.INT_TriggerMode), (8 bytes).
    Removing sc32f1xxx_int.o(.text.INT_ITConfig), (124 bytes).
    Removing sc32f1xxx_int.o(.ARM.exidx.text.INT_ITConfig), (8 bytes).
    Removing sc32f1xxx_int.o(.text.INT_GetFlagStatus), (88 bytes).
    Removing sc32f1xxx_int.o(.ARM.exidx.text.INT_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_int.o(.text.INT_ClearFlag), (40 bytes).
    Removing sc32f1xxx_int.o(.ARM.exidx.text.INT_ClearFlag), (8 bytes).
    Removing sc32f1xxx_lcd.o(.text), (0 bytes).
    Removing sc32f1xxx_lcd.o(.text.LCD_DeInit), (26 bytes).
    Removing sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_DeInit), (8 bytes).
    Removing sc32f1xxx_lcd.o(.text.LCD_Init), (132 bytes).
    Removing sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_Init), (8 bytes).
    Removing sc32f1xxx_lcd.o(.text.LCD_StructInit), (44 bytes).
    Removing sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_StructInit), (8 bytes).
    Removing sc32f1xxx_lcd.o(.text.LCD_Cmd), (48 bytes).
    Removing sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_Cmd), (8 bytes).
    Removing sc32f1xxx_lcd.o(.text.LCD_COMConfig), (56 bytes).
    Removing sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_COMConfig), (8 bytes).
    Removing sc32f1xxx_lcd.o(.text.LCD_SEGConfig), (88 bytes).
    Removing sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_SEGConfig), (8 bytes).
    Removing sc32f1xxx_lcd.o(.text.LCD_Write), (28 bytes).
    Removing sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_Write), (8 bytes).
    Removing sc32f1xxx_lcd.o(.text.LCD_CustomModeScan), (20 bytes).
    Removing sc32f1xxx_lcd.o(.ARM.exidx.text.LCD_CustomModeScan), (8 bytes).
    Removing sc32f1xxx_led.o(.text), (0 bytes).
    Removing sc32f1xxx_led.o(.text.LED_DeInit), (26 bytes).
    Removing sc32f1xxx_led.o(.ARM.exidx.text.LED_DeInit), (8 bytes).
    Removing sc32f1xxx_led.o(.text.LED_Init), (108 bytes).
    Removing sc32f1xxx_led.o(.ARM.exidx.text.LED_Init), (8 bytes).
    Removing sc32f1xxx_led.o(.text.LED_StructInit), (28 bytes).
    Removing sc32f1xxx_led.o(.ARM.exidx.text.LED_StructInit), (8 bytes).
    Removing sc32f1xxx_led.o(.text.LED_Cmd), (48 bytes).
    Removing sc32f1xxx_led.o(.ARM.exidx.text.LED_Cmd), (8 bytes).
    Removing sc32f1xxx_led.o(.text.LED_Write), (28 bytes).
    Removing sc32f1xxx_led.o(.ARM.exidx.text.LED_Write), (8 bytes).
    Removing sc32f1xxx_led.o(.text.LED_COMConfig), (56 bytes).
    Removing sc32f1xxx_led.o(.ARM.exidx.text.LED_COMConfig), (8 bytes).
    Removing sc32f1xxx_led.o(.text.LED_SEGConfig), (88 bytes).
    Removing sc32f1xxx_led.o(.ARM.exidx.text.LED_SEGConfig), (8 bytes).
    Removing sc32f1xxx_led.o(.text.LED_CustomModeScan), (16 bytes).
    Removing sc32f1xxx_led.o(.ARM.exidx.text.LED_CustomModeScan), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text), (0 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_DeInit), (26 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_DeInit), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_StructInit), (38 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_StructInit), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_Init), (148 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_Init), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_Cmd), (48 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_Cmd), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_SetPrescaler), (36 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_SetPrescaler), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_GetPrescaler), (16 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_GetPrescaler), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_SetCycle), (24 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_SetCycle), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_GetCycle), (12 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_GetCycle), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_SetDuty), (160 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_SetDuty), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_GetDuty), (232 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_GetDuty), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_ITConfig), (52 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_ITConfig), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_GetFlagStatus), (44 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_ledpwm.o(.text.LEDPWM_ClearFlag), (24 bytes).
    Removing sc32f1xxx_ledpwm.o(.ARM.exidx.text.LEDPWM_ClearFlag), (8 bytes).
    Removing sc32f1xxx_op.o(.text), (0 bytes).
    Removing sc32f1xxx_op.o(.text.OP_DeInit), (40 bytes).
    Removing sc32f1xxx_op.o(.ARM.exidx.text.OP_DeInit), (8 bytes).
    Removing sc32f1xxx_op.o(.text.OP_Init), (64 bytes).
    Removing sc32f1xxx_op.o(.ARM.exidx.text.OP_Init), (8 bytes).
    Removing sc32f1xxx_op.o(.text.OP_Cmd), (48 bytes).
    Removing sc32f1xxx_op.o(.ARM.exidx.text.OP_Cmd), (8 bytes).
    Removing sc32f1xxx_op.o(.text.OP_OffsetTrimConfig), (56 bytes).
    Removing sc32f1xxx_op.o(.ARM.exidx.text.OP_OffsetTrimConfig), (8 bytes).
    Removing sc32f1xxx_op.o(.text.OP_GainSelection), (32 bytes).
    Removing sc32f1xxx_op.o(.ARM.exidx.text.OP_GainSelection), (8 bytes).
    Removing sc32f1xxx_op.o(.text.OP_OutputSelection), (30 bytes).
    Removing sc32f1xxx_op.o(.ARM.exidx.text.OP_OutputSelection), (8 bytes).
    Removing sc32f1xxx_op.o(.text.OP_OffsetSet), (192 bytes).
    Removing sc32f1xxx_op.o(.ARM.exidx.text.OP_OffsetSet), (8 bytes).
    Removing sc32f1xxx_option.o(.text), (0 bytes).
    Removing sc32f1xxx_option.o(.text.OPTION_WDTCmd), (56 bytes).
    Removing sc32f1xxx_option.o(.ARM.exidx.text.OPTION_WDTCmd), (8 bytes).
    Removing sc32f1xxx_option.o(.text.OPTION_LVRConfig), (40 bytes).
    Removing sc32f1xxx_option.o(.ARM.exidx.text.OPTION_LVRConfig), (8 bytes).
    Removing sc32f1xxx_option.o(.text.OPTION_JTAGCmd), (56 bytes).
    Removing sc32f1xxx_option.o(.ARM.exidx.text.OPTION_JTAGCmd), (8 bytes).
    Removing sc32f1xxx_option.o(.text.OPTION_IAPPORA), (60 bytes).
    Removing sc32f1xxx_option.o(.ARM.exidx.text.OPTION_IAPPORA), (8 bytes).
    Removing sc32f1xxx_option.o(.text.OPTION_IAPPORB), (60 bytes).
    Removing sc32f1xxx_option.o(.ARM.exidx.text.OPTION_IAPPORB), (8 bytes).
    Removing sc32f1xxx_pga.o(.text), (0 bytes).
    Removing sc32f1xxx_pwm.o(.text), (0 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_DeInit), (44 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_DeInit), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_StructInit), (34 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_StructInit), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_Init), (72 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_Init), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_RisingDeadTimeConfig), (40 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_RisingDeadTimeConfig), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_FallingDeadTimeConfig), (44 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_FallingDeadTimeConfig), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_Cmd), (48 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_Cmd), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_SetPrescaler), (36 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_SetPrescaler), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_GetPrescaler), (16 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_GetPrescaler), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_SetCycle), (16 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_SetCycle), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_GetCycle), (14 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_GetCycle), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_SetDuty), (82 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_SetDuty), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_GetDuty), (90 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_GetDuty), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_FDStructInit), (22 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_FDStructInit), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_FDInit), (40 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_FDInit), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_FDCmd), (48 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_FDCmd), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_ITConfig), (50 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_ITConfig), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_GetFlagStatus), (48 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_pwm.o(.text.PWM_ClearFlag), (18 bytes).
    Removing sc32f1xxx_pwm.o(.ARM.exidx.text.PWM_ClearFlag), (8 bytes).
    Removing sc32f1xxx_pwr.o(.text), (0 bytes).
    Removing sc32f1xxx_pwr.o(.text.PWR_EnterIDLEMode), (48 bytes).
    Removing sc32f1xxx_pwr.o(.ARM.exidx.text.PWR_EnterIDLEMode), (8 bytes).
    Removing sc32f1xxx_pwr.o(.text.PWR_EnterSTOPMode), (56 bytes).
    Removing sc32f1xxx_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode), (8 bytes).
    Removing sc32f1xxx_qep.o(.text), (0 bytes).
    Removing sc32f1xxx_qspi.o(.text), (0 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_DeInit), (80 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_DeInit), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_StructInit), (46 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_StructInit), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_Init), (84 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Init), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_Cmd), (42 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Cmd), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_SetDataLength), (40 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SetDataLength), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_LModeSelect), (40 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_LModeSelect), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_ModeSelect), (40 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ModeSelect), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_Write_ComSet), (92 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Write_ComSet), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_SendData8), (18 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendData8), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_SendData16), (18 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendData16), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_SendData32), (16 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendData32), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_SendDataFIFO), (218 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendDataFIFO), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_SendMultipleData), (276 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_SendMultipleData), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_Read_ComSet), (76 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Read_ComSet), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_CLKONLYSet), (50 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_CLKONLYSet), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_ReceiveData8), (14 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveData8), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_ReceiveData16), (14 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveData16), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_ReceiveData32), (12 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveData32), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_Receivelen), (16 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_Receivelen), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_ReceiveMultipleData), (324 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveMultipleData), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_ReceiveDataFIFO), (218 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ReceiveDataFIFO), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_ITConfig), (46 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ITConfig), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_ClearFlag), (22 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_ClearFlag), (8 bytes).
    Removing sc32f1xxx_qspi.o(.text.QSPI_DMACmd), (46 bytes).
    Removing sc32f1xxx_qspi.o(.ARM.exidx.text.QSPI_DMACmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text), (0 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_DeInit), (44 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_Unlock), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_Unlock), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_HXTCmd), (52 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_HXTCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_HIRCCmd), (52 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_HIRCCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_LXTCmd), (52 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_LXTCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_LIRCCmd), (52 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_LIRCCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_HIRCDIV1Cmd), (56 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_HIRCDIV1Cmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB0Cmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB0Cmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB1Cmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB1Cmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB2Cmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB2Cmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_SYSCLKConfig), (232 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_GetSYSCLKSource), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_HCLKConfig), (32 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB0Config), (32 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB0Config), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB1Config), (32 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB1Config), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB2Config), (32 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB2Config), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_GetClocksFreq), (236 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_WaitConfig), (40 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_WaitConfig), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_PWM0CLKConfig), (40 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_PWM0CLKConfig), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_LCDLEDCLKConfig), (40 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_LCDLEDCLKConfig), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_BTMCLKConfig), (40 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_BTMCLKConfig), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_AHBPeriphClockCmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB0PeriphClockCmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB0PeriphClockCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB1PeriphClockCmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB2PeriphClockCmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_AHBPeriphResetCmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB0PeriphResetCmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB0PeriphResetCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB1PeriphResetCmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_APB2PeriphResetCmd), (48 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_NMICmd), (72 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_NMICmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_SystickCLKConfig), (76 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SystickCLKConfig), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_SystickSetCounter), (44 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SystickSetCounter), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_SystickCmd), (44 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SystickCmd), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_SystickGetFlagStatus), (36 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_SystickGetFlagStatus), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_ITConfig), (56 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.RCC_ClearFlag), (24 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.SC_IncTick), (16 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.SC_IncTick), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.SC_Delay), (116 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.SC_Delay), (8 bytes).
    Removing sc32f1xxx_rcc.o(.text.SC_Delay_us), (100 bytes).
    Removing sc32f1xxx_rcc.o(.ARM.exidx.text.SC_Delay_us), (8 bytes).
    Removing sc32f1xxx_rcc.o(.bss.uwTick), (4 bytes).
    Removing sc32f1xxx_spi.o(.text), (0 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_DeInit), (152 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_DeInit), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_StructInit), (38 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_Init), (72 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_Cmd), (48 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_SetMode), (44 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_SetMode), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_DataSizeConfig), (28 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_SendDataFIFO), (248 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_SendDataFIFO), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_ReceiveDataFIFO), (248 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_ReceiveDataFIFO), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_SendData), (16 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_SendData), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_ReceiveData), (12 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_ReceiveData), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_PinRemapConfig), (72 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_PinRemapConfig), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_ITConfig), (50 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_ITConfig), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_ClearFlag), (18 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_ClearFlag), (8 bytes).
    Removing sc32f1xxx_spi.o(.text.SPI_DMACmd), (46 bytes).
    Removing sc32f1xxx_spi.o(.ARM.exidx.text.SPI_DMACmd), (8 bytes).
    Removing sc32f1xxx_spi1_twi1.o(.text), (0 bytes).
    Removing sc32f1xxx_temper.o(.text), (0 bytes).
    Removing sc32f1xxx_tim.o(.text), (0 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_DeInit), (296 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_TIMBaseInit), (68 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_TIMBaseInit), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_TimeBaseStructInit), (30 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_Cmd), (48 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_SetCounter), (16 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_GetCounter), (12 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_SetAutoreload), (18 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_GetAutoreload), (14 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetAutoreload), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_SetPerscaler), (32 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_SetPerscaler), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_GetPrescaler), (18 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_ICInit), (80 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_ICStructInit), (18 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_ICCmd), (48 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ICCmd), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_GetRisingCapture), (12 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetRisingCapture), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_GetFailingCapture), (12 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetFailingCapture), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_PWMInit), (50 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PWMInit), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_PWMStructInit), (18 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PWMStructInit), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_PWMSetDuty), (52 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PWMSetDuty), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_PWMGetDuty), (48 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PWMGetDuty), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_ClockOutputCmd), (46 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ClockOutputCmd), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_PinRemapConfig), (40 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_PinRemapConfig), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_ITConfig), (50 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_ClearFlag), (18 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing sc32f1xxx_tim.o(.text.TIM_DMACmd), (50 bytes).
    Removing sc32f1xxx_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing sc32f1xxx_twi.o(.text), (0 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_DeInit), (152 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_DeInit), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_StructInit), (32 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_StructInit), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_Init), (100 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_Init), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_Cmd), (48 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_Cmd), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_AcknowledgeConfig), (48 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_AcknowledgeConfig), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_GeneralCallCmd), (48 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GeneralCallCmd), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_StretchClockConfig), (48 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_StretchClockConfig), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_SetNbytes), (20 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_SetNbytes), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_GetNbytes), (20 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GetNbytes), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_GenerateSTART), (48 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GenerateSTART), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_GenerateSTOP), (48 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GenerateSTOP), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_Send7bitAddress), (66 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_Send7bitAddress), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_SendData), (18 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_SendData), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_ReceiveData), (14 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_ReceiveData), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_PinRemapConfig), (40 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_PinRemapConfig), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_ITConfig), (50 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_ITConfig), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_GetFlagStatus), (40 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_ClearFlag), (22 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_ClearFlag), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_GetStateMachine), (18 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_GetStateMachine), (8 bytes).
    Removing sc32f1xxx_twi.o(.text.TWI_DMACmd), (46 bytes).
    Removing sc32f1xxx_twi.o(.ARM.exidx.text.TWI_DMACmd), (8 bytes).
    Removing sc32f1xxx_uart.o(.text), (0 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_DeInit), (224 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_DeInit), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_Init), (120 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_TXCmd), (48 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_TXCmd), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_RXCmd), (48 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_RXCmd), (8 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_SendData), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_ReceiveData), (20 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_ReceiveData), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_PinRemapConfig), (40 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_PinRemapConfig), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_ITConfig), (50 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_ITConfig), (8 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_GetFlagStatus), (8 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_ClearFlag), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_DMACmd), (50 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_DMACmd), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_LIN_MODE), (56 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_LIN_MODE), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_LIN_BKSIZE), (56 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_LIN_BKSIZE), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_SendBreak), (20 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_SendBreak), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_LIN_SLVARENE), (64 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_LIN_SLVARENE), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.UART_LIN_LBDL), (56 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.UART_LIN_LBDL), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.LIN_CalID), (84 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.LIN_CalID), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.LINCalChecksum), (108 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.LINCalChecksum), (8 bytes).
    Removing sc32f1xxx_uart.o(.text.Printf_UartInit), (20 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.Printf_UartInit), (8 bytes).
    Removing sc32f1xxx_uart.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing sc32f1xxx_vref.o(.text), (0 bytes).
    Removing sc32f1xxx_wdt.o(.text), (0 bytes).
    Removing sc32f1xxx_wdt.o(.text.WDT_DeInit), (20 bytes).
    Removing sc32f1xxx_wdt.o(.ARM.exidx.text.WDT_DeInit), (8 bytes).
    Removing sc32f1xxx_wdt.o(.text.WDT_SetOverTime), (40 bytes).
    Removing sc32f1xxx_wdt.o(.ARM.exidx.text.WDT_SetOverTime), (8 bytes).
    Removing sc32f1xxx_wdt.o(.text.WDT_Cmd), (56 bytes).
    Removing sc32f1xxx_wdt.o(.ARM.exidx.text.WDT_Cmd), (8 bytes).
    Removing sc32f1xxx_wdt.o(.text.WDT_SetReload), (16 bytes).
    Removing sc32f1xxx_wdt.o(.ARM.exidx.text.WDT_SetReload), (8 bytes).
    Removing system_sc32f1xxx.o(.text), (0 bytes).
    Removing system_sc32f1xxx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing dflti.o(.text), (40 bytes).
    Removing dfixi.o(.text), (72 bytes).

726 unused section(s) (total 25404 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ./.cmsis/dev/startup_sc32r803.s          0x00000000   Number         0  startup_sc32r803.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    sc32f1xxx_adc.c                          0x00000000   Number         0  sc32f1xxx_adc.o ABSOLUTE
    sc32f1xxx_btm.c                          0x00000000   Number         0  sc32f1xxx_btm.o ABSOLUTE
    sc32f1xxx_can.c                          0x00000000   Number         0  sc32f1xxx_can.o ABSOLUTE
    sc32f1xxx_cmp.c                          0x00000000   Number         0  sc32f1xxx_cmp.o ABSOLUTE
    sc32f1xxx_crc.c                          0x00000000   Number         0  sc32f1xxx_crc.o ABSOLUTE
    sc32f1xxx_dac.c                          0x00000000   Number         0  sc32f1xxx_dac.o ABSOLUTE
    sc32f1xxx_dma.c                          0x00000000   Number         0  sc32f1xxx_dma.o ABSOLUTE
    sc32f1xxx_gpio.c                         0x00000000   Number         0  sc32f1xxx_gpio.o ABSOLUTE
    sc32f1xxx_iap.c                          0x00000000   Number         0  sc32f1xxx_iap.o ABSOLUTE
    sc32f1xxx_int.c                          0x00000000   Number         0  sc32f1xxx_int.o ABSOLUTE
    sc32f1xxx_lcd.c                          0x00000000   Number         0  sc32f1xxx_lcd.o ABSOLUTE
    sc32f1xxx_led.c                          0x00000000   Number         0  sc32f1xxx_led.o ABSOLUTE
    sc32f1xxx_ledpwm.c                       0x00000000   Number         0  sc32f1xxx_ledpwm.o ABSOLUTE
    sc32f1xxx_op.c                           0x00000000   Number         0  sc32f1xxx_op.o ABSOLUTE
    sc32f1xxx_option.c                       0x00000000   Number         0  sc32f1xxx_option.o ABSOLUTE
    sc32f1xxx_pga.c                          0x00000000   Number         0  sc32f1xxx_pga.o ABSOLUTE
    sc32f1xxx_pwm.c                          0x00000000   Number         0  sc32f1xxx_pwm.o ABSOLUTE
    sc32f1xxx_pwr.c                          0x00000000   Number         0  sc32f1xxx_pwr.o ABSOLUTE
    sc32f1xxx_qep.c                          0x00000000   Number         0  sc32f1xxx_qep.o ABSOLUTE
    sc32f1xxx_qspi.c                         0x00000000   Number         0  sc32f1xxx_qspi.o ABSOLUTE
    sc32f1xxx_rcc.c                          0x00000000   Number         0  sc32f1xxx_rcc.o ABSOLUTE
    sc32f1xxx_spi.c                          0x00000000   Number         0  sc32f1xxx_spi.o ABSOLUTE
    sc32f1xxx_spi1_twi1.c                    0x00000000   Number         0  sc32f1xxx_spi1_twi1.o ABSOLUTE
    sc32f1xxx_temper.c                       0x00000000   Number         0  sc32f1xxx_temper.o ABSOLUTE
    sc32f1xxx_tim.c                          0x00000000   Number         0  sc32f1xxx_tim.o ABSOLUTE
    sc32f1xxx_twi.c                          0x00000000   Number         0  sc32f1xxx_twi.o ABSOLUTE
    sc32f1xxx_uart.c                         0x00000000   Number         0  sc32f1xxx_uart.o ABSOLUTE
    sc32f1xxx_vref.c                         0x00000000   Number         0  sc32f1xxx_vref.o ABSOLUTE
    sc32f1xxx_wdt.c                          0x00000000   Number         0  sc32f1xxx_wdt.o ABSOLUTE
    system_sc32f1xxx.c                       0x00000000   Number         0  system_sc32f1xxx.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_sc32r803.o(RESET)
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section      212  startup_sc32r803.o(.text)
    .text                                    0x000001a8   Section        0  dadd.o(.text)
    .text                                    0x0000030c   Section        0  dmul.o(.text)
    .text                                    0x000003dc   Section        0  uidiv_div0.o(.text)
    .text                                    0x0000041a   Section        0  uldiv.o(.text)
    .text                                    0x0000047a   Section        0  llshl.o(.text)
    .text                                    0x0000049a   Section        0  llushr.o(.text)
    .text                                    0x000004bc   Section        0  llsshr.o(.text)
    .text                                    0x000004e2   Section        0  iusefp.o(.text)
    .text                                    0x000004e2   Section        0  depilogue.o(.text)
    .text                                    0x000005a0   Section        0  ddiv.o(.text)
    .text                                    0x00000690   Section        0  dfixul.o(.text)
    .text                                    0x000006d0   Section       40  cdrcmple.o(.text)
    .text                                    0x000006f8   Section       48  init.o(.text)
    [Anonymous Symbol]                       0x00000728   Section        0  system_sc32f1xxx.o(.text.SystemInit)
    __arm_cp.0_0                             0x00000734   Number         4  system_sc32f1xxx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000738   Section        0  sc32f1xxx_uart.o(.text.UART_ClearFlag)
    [Anonymous Symbol]                       0x0000074a   Section        0  sc32f1xxx_uart.o(.text.UART_GetFlagStatus)
    [Anonymous Symbol]                       0x00000774   Section        0  sc32f1xxx_uart.o(.text.UART_SendData)
    __arm_cp.4_0                             0x0000078c   Number         4  sc32f1xxx_uart.o(.text.UART_SendData)
    [Anonymous Symbol]                       0x00000790   Section        0  sc32f1xxx_uart.o(.text.fputc)
    __arm_cp.19_0                            0x000007c8   Number         4  sc32f1xxx_uart.o(.text.fputc)
    [Anonymous Symbol]                       0x000007cc   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x000007e0   Number         4  main.o(.text.main)
    i.__0printf                              0x000007e4   Section        0  printfa.o(i.__0printf)
    i.__ARM_clz                              0x00000804   Section        0  depilogue.o(i.__ARM_clz)
    i.__scatterload_copy                     0x00000832   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000840   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000842   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x00000851   Thumb Code   344  printfa.o(i._fp_digits)
    i._fp_digits                             0x00000850   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x000009c5   Thumb Code  1754  printfa.o(i._printf_core)
    i._printf_core                           0x000009c4   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x000010b1   Thumb Code    32  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x000010b0   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x000010d1   Thumb Code    44  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x000010d0   Section        0  printfa.o(i._printf_pre_padding)
    [Anonymous Symbol]                       0x000010fc   Section        0  main.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    STACK                                    0x20000010   Section      512  startup_sc32r803.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$WCHAR32$ENUMINT$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_sc32r803.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_sc32r803.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_sc32r803.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d5   Thumb Code   100  startup_sc32r803.o(.text)
    NMI_Handler                              0x00000139   Thumb Code     2  startup_sc32r803.o(.text)
    HardFault_Handler                        0x0000013b   Thumb Code     2  startup_sc32r803.o(.text)
    MemManage_Handler                        0x0000013d   Thumb Code     2  startup_sc32r803.o(.text)
    BusFault_Handler                         0x0000013f   Thumb Code     2  startup_sc32r803.o(.text)
    UsageFault_Handler                       0x00000141   Thumb Code     2  startup_sc32r803.o(.text)
    SVC_Handler                              0x00000143   Thumb Code     2  startup_sc32r803.o(.text)
    DebugMon_Handler                         0x00000145   Thumb Code     2  startup_sc32r803.o(.text)
    PendSV_Handler                           0x00000147   Thumb Code     2  startup_sc32r803.o(.text)
    SysTick_Handler                          0x00000149   Thumb Code     2  startup_sc32r803.o(.text)
    ADC_IRQHandler                           0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    BTM_IRQHandler                           0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    CAN_IRQHandler                           0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    CMP_IRQHandler                           0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    DMA0_IRQHandler                          0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    DMA1_IRQHandler                          0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    DMA2_IRQHandler                          0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    DMA3_IRQHandler                          0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    INT0_IRQHandler                          0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    INT12_15_IRQHandler                      0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    INT1_7_IRQHandler                        0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    INT8_11_IRQHandler                       0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    LEDPWM_IRQHandler                        0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    PWM0_IRQHandler                          0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    RCC_IRQHandler                           0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TIMER0_IRQHandler                        0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TIMER1_IRQHandler                        0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TIMER2_IRQHandler                        0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TIMER3_IRQHandler                        0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TIMER4_5_IRQHandler                      0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TIMER6_7_IRQHandler                      0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TK_IRQHandler                            0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TWIx_QSPIx_0_2_IRQHandler                0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    TWIx_QSPIx_1_3_IRQHandler                0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    UART0_2_4_IRQHandler                     0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    UART1_3_5_IRQHandler                     0x0000014b   Thumb Code     0  startup_sc32r803.o(.text)
    __aeabi_dadd                             0x000001a9   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x000002f1   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x000002fd   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x0000030d   Thumb Code   202  dmul.o(.text)
    __aeabi_uidiv                            0x000003dd   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x000003dd   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_uldivmod                         0x0000041b   Thumb Code    96  uldiv.o(.text)
    __aeabi_llsl                             0x0000047b   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x0000047b   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x0000049b   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x0000049b   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x000004bd   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x000004bd   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x000004e3   Thumb Code     0  iusefp.o(.text)
    _double_round                            0x000004e3   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x000004fd   Thumb Code   164  depilogue.o(.text)
    __aeabi_ddiv                             0x000005a1   Thumb Code   234  ddiv.o(.text)
    __aeabi_d2ulz                            0x00000691   Thumb Code    54  dfixul.o(.text)
    __aeabi_cdrcmple                         0x000006d1   Thumb Code    38  cdrcmple.o(.text)
    __scatterload                            0x000006f9   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x000006f9   Thumb Code     0  init.o(.text)
    SystemInit                               0x00000729   Thumb Code    12  system_sc32f1xxx.o(.text.SystemInit)
    UART_ClearFlag                           0x00000739   Thumb Code    18  sc32f1xxx_uart.o(.text.UART_ClearFlag)
    UART_GetFlagStatus                       0x0000074b   Thumb Code    40  sc32f1xxx_uart.o(.text.UART_GetFlagStatus)
    UART_SendData                            0x00000775   Thumb Code    24  sc32f1xxx_uart.o(.text.UART_SendData)
    fputc                                    0x00000791   Thumb Code    56  sc32f1xxx_uart.o(.text.fputc)
    main                                     0x000007cd   Thumb Code    20  main.o(.text.main)
    __0printf                                0x000007e5   Thumb Code    24  printfa.o(i.__0printf)
    __1printf                                0x000007e5   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x000007e5   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x000007e5   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x000007e5   Thumb Code     0  printfa.o(i.__0printf)
    __ARM_clz                                0x00000805   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x00000833   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000841   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000843   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x0000110c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000112c   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    Printf_Uart                              0x20000008   Data           4  sc32f1xxx_uart.o(.bss.Printf_Uart)
    __initial_sp                             0x20000210   Data           0  startup_sc32r803.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00001138, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x0000112c, Max: 0x00040000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000000c0   Data   RO            3    RESET               startup_sc32r803.o
    0x000000c0   0x00000000   Code   RO          889  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x00000004   Code   RO          934    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x00000004   Code   RO          937    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x00000000   Code   RO          939    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x00000000   Code   RO          941    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x00000008   Code   RO          942    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x00000000   Code   RO          944    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x00000000   Code   RO          946    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x00000004   Code   RO          935    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   Code   RO            4    .text               startup_sc32r803.o
    0x000001a8   0x00000164   Code   RO          926    .text               mf_p.l(dadd.o)
    0x0000030c   0x000000d0   Code   RO          928    .text               mf_p.l(dmul.o)
    0x000003dc   0x0000003e   Code   RO          951    .text               mc_p.l(uidiv_div0.o)
    0x0000041a   0x00000060   Code   RO          957    .text               mc_p.l(uldiv.o)
    0x0000047a   0x00000020   Code   RO          959    .text               mc_p.l(llshl.o)
    0x0000049a   0x00000022   Code   RO          961    .text               mc_p.l(llushr.o)
    0x000004bc   0x00000026   Code   RO          963    .text               mc_p.l(llsshr.o)
    0x000004e2   0x00000000   Code   RO          965    .text               mc_p.l(iusefp.o)
    0x000004e2   0x000000be   Code   RO          966    .text               mf_p.l(depilogue.o)
    0x000005a0   0x000000f0   Code   RO          970    .text               mf_p.l(ddiv.o)
    0x00000690   0x00000040   Code   RO          972    .text               mf_p.l(dfixul.o)
    0x000006d0   0x00000028   Code   RO          974    .text               mf_p.l(cdrcmple.o)
    0x000006f8   0x00000030   Code   RO          976    .text               mc_p.l(init.o)
    0x00000728   0x00000010   Code   RO          872    .text.SystemInit    system_sc32f1xxx.o
    0x00000738   0x00000012   Code   RO          826    .text.UART_ClearFlag  sc32f1xxx_uart.o
    0x0000074a   0x00000028   Code   RO          824    .text.UART_GetFlagStatus  sc32f1xxx_uart.o
    0x00000772   0x00000002   PAD
    0x00000774   0x0000001c   Code   RO          816    .text.UART_SendData  sc32f1xxx_uart.o
    0x00000790   0x0000003c   Code   RO          846    .text.fputc         sc32f1xxx_uart.o
    0x000007cc   0x00000018   Code   RO          880    .text.main          main.o
    0x000007e4   0x00000020   Code   RO          899    i.__0printf         mc_p.l(printfa.o)
    0x00000804   0x0000002e   Code   RO          968    i.__ARM_clz         mf_p.l(depilogue.o)
    0x00000832   0x0000000e   Code   RO          980    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00000840   0x00000002   Code   RO          981    i.__scatterload_null  mc_p.l(handlers.o)
    0x00000842   0x0000000e   Code   RO          982    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00000850   0x00000174   Code   RO          906    i._fp_digits        mc_p.l(printfa.o)
    0x000009c4   0x000006ec   Code   RO          907    i._printf_core      mc_p.l(printfa.o)
    0x000010b0   0x00000020   Code   RO          908    i._printf_post_padding  mc_p.l(printfa.o)
    0x000010d0   0x0000002c   Code   RO          909    i._printf_pre_padding  mc_p.l(printfa.o)
    0x000010fc   0x0000000d   Data   RO          882    .rodata.str1.1      main.o
    0x00001109   0x00000003   PAD
    0x0000110c   0x00000020   Data   RO          979    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000210, Max: 0x00008000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000004   Data   RW          948    .data               mc_p.l(stdout.o)
    0x20000004   0x00000004   PAD
    0x20000008   0x00000004   Zero   RW          848    .bss.Printf_Uart    sc32f1xxx_uart.o
    0x2000000c   0x00000004   PAD
    0x20000010   0x00000200   Zero   RW            1    STACK               startup_sc32r803.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        24          4         13          0          0        479   main.o
       146          8          0          0          4       6110   sc32f1xxx_uart.o
       212         92        192          0        512        848   startup_sc32r803.o
        16          4          0          0          0        897   system_sc32f1xxx.o

    ----------------------------------------------------------------------
       400        108        240          0        520       8334   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         2          0          3          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
      2252         98          0          0          0        412   printfa.o
         0          0          0          4          0          0   stdout.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o
        40          2          0          0          0         68   cdrcmple.o
       356          4          0          0          0        140   dadd.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        64         10          0          0          0         68   dfixul.o
       208          6          0          0          0         88   dmul.o

    ----------------------------------------------------------------------
      3756        144          0          4          4       1504   Library Totals
         0          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2612        116          0          4          0        840   mc_p.l
      1144         28          0          0          0        664   mf_p.l

    ----------------------------------------------------------------------
      3756        144          0          4          4       1504   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      4156        252        240          4        524       9238   Grand Totals
      4156        252        240          4        524       9238   ELF Image Totals
      4156        252        240          4          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 4396 (   4.29kB)
    Total RW  Size (RW Data + ZI Data)               528 (   0.52kB)
    Total ROM Size (Code + RO Data + RW Data)       4400 (   4.30kB)

==============================================================================

